---

# NOTES
# Best run on a large memory (16GB+) ubuntu linux machine
# 

  # Make sure python is installed on target system
- hosts: all
  gather_facts: False
  tasks:
  - name: install python 2
    raw: sudo bash -c "test -e /usr/bin/python || (apt -qqy update && apt install -qy python-minimal)"
  - name: update
    raw: sudo apt-get update
  - name: install pip3
    raw: sudo apt-get install python3-pip

# Install python and other linux packages
- hosts: webservers
  remote_user: root
  become: yes
  tasks:
  - name: apt update
    apt:
      update_cache: yes
  - name: ensure web app packages are installed
    apt:
      name: "{{item}}"
      state: latest
    with_items:
     - nginx
     - uwsgi
     - uwsgi-plugin-python3
     - python3-dev
     - python3-venv
     - build-essential
     - graphviz
     - libgraphviz-dev
     - pkg-config
     - gunicorn
     # for the Ansible postgresql modules; must be installed in system Python
     - python3-psycopg2
     - bedtools

# SETUP NGINX AND GUNICORN CONFIG FILES

# Clone git repo and flesh out directory structure
- hosts: webservers
  remote_user: root
  become: yes
  tasks:
  - name: make sure /home/ubuntu/opt/chipio is writable by normal user
    file:
      path: /home/ubuntu/opt
      owner: 1000
      group: 1000
      state: directory
      mode: 0755
  - name: clone the main source git repository
    git:
      repo: 'https://github.com/SaideepGona/ChIP-IO.git'
      dest: /home/ubuntu/opt
  - name: create peak directory
    file:
      path: /home/ubuntu/opt/ChIP-IO/pass_peaks
      owner: 1000
      group: 1000
      state: directory
      mode: 0755
  - name: create motifs directory
    file:
      path: /home/ubuntu/opt/ChIP-IO/motifs
      owner: 1000
      group: 1000
      state: directory
      mode: 0755
  - name: create reference genome directory
    file:
      path: /home/ubuntu/opt/ChIP-IO/GRCh38
      owner: 1000
      group: 1000
      state: directory
      mode: 0755
  - name: create annotations directory
    file:
      path: /home/ubuntu/opt/ChIP-IO/annotations
      owner: 1000
      group: 1000
      state: directory
      mode: 0755
  - name: create intermediates directory
    file:
      path: /home/ubuntu/opt/ChIP-IO/intermediates
      owner: 1000
      group: 1000
      state: directory
      mode: 0755
  - name: create presets directory
    file:
      path: /home/ubuntu/opt/ChIP-IO/presets
      owner: 1000
      group: 1000
      state: directory
      mode: 0755
  - name: create results directory
    file:
      path: /home/ubuntu/opt/ChIP-IO/results
      owner: 1000
      group: 1000
      state: directory
      mode: 0755

# Add all relevant files not within the git repo
- hosts: webservers
  remote_user: root
  become: yes
  tasks:
  - name: copy over peak files
    copy:
      src: "{{ item }}"
      dest: /home/ubuntu/opt/ChIP-IO/pass_peaks/
    with_fileglob:
      - /home/saideep/Documents/GitHub_Repos/Saideep/ChIP-IO/pass_peaks/*
  - name: copy over motif files
    copy:
      src: "{{ item }}"
      dest: /home/ubuntu/opt/ChIP-IO/motifs/
    with_fileglob:
      - /home/saideep/Documents/GitHub_Repos/Saideep/ChIP-IO/motifs/*
  - name: copy over reference genome files
    copy:
      src: "{{ item }}"
      dest: /home/ubuntu/opt/ChIP-IO/GRCh38/
    with_fileglob:
      - /home/saideep/Documents/GitHub_Repos/Saideep/ChIP-IO/GRCh38/*
  - name: copy over preset files
    copy:
      src: "{{ item }}"
      dest: /home/ubuntu/opt/ChIP-IO/presets/
    with_fileglob:
      - /home/saideep/Documents/GitHub_Repos/Saideep/ChIP-IO/presets/*
  - name: copy over annotation files
    copy:
      src: "{{ item }}"
      dest: /home/ubuntu/opt/ChIP-IO/annotations/
    with_fileglob:
      - /home/saideep/Documents/GitHub_Repos/Saideep/ChIP-IO/annotations/*

# Set up python environment and install requirements packages
- hosts: webservers
  tasks:
  - name: bootstrap Python venv packages
    pip:
      virtualenv: /home/ubuntu/opt/venv
      virtualenv_command: pyvenv
      name: wheel
  - name: copy Python requirements.txt
    copy: src=deploy/requirements.txt dest=/home/ubuntu/opt/ChIP-IO/requirements.txt
  - name: install Python packages
    pip:
      virtualenv: /home/ubuntu/opt/chipio/venv
      virtualenv_command: pyvenv
      requirements: /home/ubuntu/opt/chipio/requirements.txt
  - name: delete requirements.txt
    file:
      path: /home/ubuntu/opt/chipio/requirements.txt
      state: absent
  

# To set up a compatible ec2 instance, consult https://www.nginx.com/blog/setting-up-nginx/

# Install bioinformatics packages
# bedtools
# fimo
# meme




# - hosts: dbservers
#   remote_user: root
#   become: yes
#   tasks:
#   - name: ensure postgresql is installed
#     apt:
#       name: postgresql
#       state: latest

# - hosts: dbservers
#   become: yes
#   become_user: postgres
#   tasks:
#   - name: create postgresql db
#     postgresql_db:
#       name: scrna_metadata
#       encoding: UTF-8
#       lc_collate: en_US.UTF-8
#       lc_ctype: en_US.UTF-8
#       template: template0
#   - name: create postgresql user
#     postgresql_user:
#       name: scrna_user
#       password: scrna_pass
# ...
